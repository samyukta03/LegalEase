{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project-Legal.ly\\\\src\\\\Components\\\\Dictaphone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport Mic from \"../Assets/mic.svg\";\nimport OnMic from \"../Assets/micon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dictaphone = _ref => {\n  _s();\n\n  let {\n    input,\n    setinput\n  } = _ref;\n  const [mic, setMic] = useState(false);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return alert(\"Browser doesn't support speech recognition\");\n  }\n\n  const onMicStart = () => {\n    setMic(!mic);\n    mic ? SpeechRecognition.startListening() : SpeechRecognition.stopListening();\n    console.log(transcript);\n    setinput(transcript);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: listening ? OnMic : Mic,\n      alt: \"Mic\",\n      className: \"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\",\n      onClick: onMicStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictaphone, \"sehh70Qlk3XtCVO4xWsX4RyDGdE=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = Dictaphone;\nexport default Dictaphone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"sources":["F:/Project-Legal.ly/src/Components/Dictaphone.js"],"names":["React","useState","SpeechRecognition","useSpeechRecognition","Mic","OnMic","Dictaphone","input","setinput","mic","setMic","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","alert","onMicStart","startListening","stopListening","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;AAGA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AAC1C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM;AACJU,IAAAA,UADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKFX,oBAAoB,EALxB;;AAOA,MAAI,CAACW,gCAAL,EAAuC;AACrC,WAAOC,KAAK,CAAC,4CAAD,CAAZ;AACD;;AACD,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACAA,IAAAA,GAAG,GACCP,iBAAiB,CAACe,cAAlB,EADD,GAECf,iBAAiB,CAACgB,aAAlB,EAFJ;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACAH,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,2BACE;AACE,MAAA,GAAG,EAAEC,SAAS,GAAGP,KAAH,GAAWD,GAD3B;AAEE,MAAA,GAAG,EAAC,KAFN;AAGE,MAAA,SAAS,EAAC,4EAHZ;AAIE,MAAA,OAAO,EAAEY;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/BD;;GAAMV,U;UAOAH,oB;;;KAPAG,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport Mic from \"../Assets/mic.svg\";\r\nimport OnMic from \"../Assets/micon.svg\";\r\n\r\nconst Dictaphone = ({ input, setinput }) => {\r\n  const [mic, setMic] = useState(false);\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return alert(\"Browser doesn't support speech recognition\");\r\n  }\r\n  const onMicStart = () => {\r\n    setMic(!mic);\r\n    mic\r\n      ? SpeechRecognition.startListening()\r\n      : SpeechRecognition.stopListening();\r\n    console.log(transcript);\r\n    setinput(transcript);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={listening ? OnMic : Mic}\r\n        alt=\"Mic\"\r\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n        onClick={onMicStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Dictaphone;\r\n"]},"metadata":{},"sourceType":"module"}