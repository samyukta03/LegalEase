{"ast":null,"code":"import _slicedToArray from\"F:/Project-Legal.ly/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import SpeechRecognition,{useSpeechRecognition}from\"react-speech-recognition\";import Mic from\"../Assets/mic.svg\";import OnMic from\"../Assets/micon.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";var Dictaphone=function Dictaphone(_ref){var input=_ref.input,setinput=_ref.setinput;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),mic=_useState2[0],setMic=_useState2[1];var _useSpeechRecognition=useSpeechRecognition(),transcript=_useSpeechRecognition.transcript,listening=_useSpeechRecognition.listening,resetTranscript=_useSpeechRecognition.resetTranscript,browserSupportsSpeechRecognition=_useSpeechRecognition.browserSupportsSpeechRecognition;if(!browserSupportsSpeechRecognition){return alert(\"Browser doesn't support speech recognition\");}var onMicStart=function onMicStart(){setMic(!mic);if(mic){SpeechRecognition.startListening({language:lang// Default to English\n});}else{SpeechRecognition.stopListening();}if(transcript===\"Tamil\"){lang=\"ta-IN\";}else{lang=\"en-US\";}console.log(transcript);setinput(transcript);};// const onMicStart = () => {\n//   setMic(!mic);\n//   mic\n//     ? SpeechRecognition.startListening()\n//     : SpeechRecognition.stopListening();\n//   console.log(transcript);\n//   setinput(transcript);\n// };\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:listening?OnMic:Mic,alt:\"Mic\",className:\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\",onClick:onMicStart})});};export default Dictaphone;","map":{"version":3,"sources":["F:/Project-Legal.ly/src/Components/Dictaphone.js"],"names":["React","useState","SpeechRecognition","useSpeechRecognition","Mic","OnMic","Dictaphone","input","setinput","mic","setMic","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","alert","onMicStart","startListening","language","lang","stopListening","console","log"],"mappings":"yGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,iBAAP,EACEC,oBADF,KAEO,0BAFP,CAGA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,CAC1C,cAAsBP,QAAQ,CAAC,KAAD,CAA9B,wCAAOQ,GAAP,eAAYC,MAAZ,eACA,0BAKIP,oBAAoB,EALxB,CACEQ,UADF,uBACEA,UADF,CAEEC,SAFF,uBAEEA,SAFF,CAGEC,eAHF,uBAGEA,eAHF,CAIEC,gCAJF,uBAIEA,gCAJF,CAOA,GAAI,CAACA,gCAAL,CAAuC,CACrC,MAAOC,CAAAA,KAAK,CAAC,4CAAD,CAAZ,CACD,CACD,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBN,MAAM,CAAC,CAACD,GAAF,CAAN,CACA,GAAIA,GAAJ,CAAS,CACPP,iBAAiB,CAACe,cAAlB,CAAiC,CAC/BC,QAAQ,CAAEC,IAAM;AADe,CAAjC,EAGD,CAJD,IAIO,CACLjB,iBAAiB,CAACkB,aAAlB,GACD,CACD,GAAGT,UAAU,GAAG,OAAhB,CAAwB,CACtBQ,IAAI,CAAC,OAAL,CACD,CAFD,IAGI,CACFA,IAAI,CAAC,OAAL,CACD,CACDE,OAAO,CAACC,GAAR,CAAYX,UAAZ,EACAH,QAAQ,CAACG,UAAD,CAAR,CACD,CAjBD,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,kCACE,YACE,GAAG,CAAEC,SAAS,CAAGP,KAAH,CAAWD,GAD3B,CAEE,GAAG,CAAC,KAFN,CAGE,SAAS,CAAC,4EAHZ,CAIE,OAAO,CAAEY,UAJX,EADF,EADF,CAUD,CAlDD,CAmDA,cAAeV,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport Mic from \"../Assets/mic.svg\";\r\nimport OnMic from \"../Assets/micon.svg\";\r\n\r\nconst Dictaphone = ({ input, setinput }) => {\r\n  const [mic, setMic] = useState(false);\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return alert(\"Browser doesn't support speech recognition\");\r\n  }\r\n  const onMicStart = () => {\r\n    setMic(!mic);\r\n    if (mic) {\r\n      SpeechRecognition.startListening({\r\n        language: lang, // Default to English\r\n      });\r\n    } else {\r\n      SpeechRecognition.stopListening();\r\n    }\r\n    if(transcript===\"Tamil\"){\r\n      lang=\"ta-IN\"\r\n    }\r\n    else{\r\n      lang=\"en-US\"\r\n    }\r\n    console.log(transcript);\r\n    setinput(transcript);\r\n  };\r\n\r\n  // const onMicStart = () => {\r\n  //   setMic(!mic);\r\n  //   mic\r\n  //     ? SpeechRecognition.startListening()\r\n  //     : SpeechRecognition.stopListening();\r\n  //   console.log(transcript);\r\n  //   setinput(transcript);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={listening ? OnMic : Mic}\r\n        alt=\"Mic\"\r\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\r\n        onClick={onMicStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Dictaphone;\r\n"]},"metadata":{},"sourceType":"module"}